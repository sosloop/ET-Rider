pluginManagement {
    // Provide repositories to resolve plugins
    repositories {
        maven {
            allowInsecureProtocol = true
            url "https://cache-redirector.jetbrains.com/plugins.gradle.org" }
        maven {
            allowInsecureProtocol = true
            url "https://cache-redirector.jetbrains.com/dl.bintray.com/kotlin/kotlin-eap" }
        maven {
            allowInsecureProtocol = true
            url "https://cache-redirector.jetbrains.com/myget.org.rd-snapshots.maven" }

        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/'}
        maven { url 'https://maven.aliyun.com/repository/google/'}
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin/'}
        maven { url 'https://maven.aliyun.com/repository/spring-plugin/'}
        maven { url 'https://maven.aliyun.com/repository/grails-core/'}
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots/'}
    }
    resolutionStrategy {
        eachPlugin {
            // Gradle has to map a plugin dependency to Maven coordinates - '{groupId}:{artifactId}:{version}'. It tries
            // to do use '{plugin.id}:{plugin.id}.gradle.plugin:version'.
            // This doesn't work for rdgen, so we provide some help
            if (requested.id.id == "com.jetbrains.rdgen") {
                useModule("com.jetbrains.rd:rd-gen:${requested.version}")
            }
        }
    }
}

rootProject.name = 'ReSharperPlugin.MyAwesomePlugin'

include ':protocol'
